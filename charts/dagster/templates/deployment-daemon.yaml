apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-daemon
  labels:
    app: dagster-daemon
spec:
  replicas: {{ .Values.daemon.replicas | default 1 }}
  selector:
    matchLabels:
      app: dagster-daemon
  template:
    metadata:
      labels:
        app: dagster-daemon
    spec:
      initContainers:
        - name: wait-for-postgres
          image: docker.m.daocloud.io/library/busybox:latest 
          command: ['sh', '-c', 'until nc -z dagster-postgresql 5432; do echo waiting for postgres; sleep 2; done;']
      serviceAccountName: {{ .Values.serviceAccount.name | default "dagster" }} 
      containers:
      - name: dagster-daemon
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        command: ["dagster-daemon", "run", "-f", "/opt/dagster/examples/xiaoleng/definitions.py"]
        env:
        - name: DAGSTER_HOME
          value: /opt/dagster/dagster_home
        - name: PYTHONPATH
          value: /opt/dagster
        - name: SERVICE_TYPE
          value: "daemon"
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.postgresqlUsername | default "dagster" }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dagster-postgresql
              key: postgresql-password
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.postgresqlDatabase | default "dagster" }}
        volumeMounts:
        - name: dagster-home
          mountPath: /opt/dagster/dagster_home
        - name: dagster-instance-config
          mountPath: /opt/dagster/dagster_home/dagster.yaml
          subPath: dagster.yaml
      volumes:
      - name: dagster-home
        persistentVolumeClaim:
          claimName: dagster-home-pvc
      - name: dagster-instance-config
        configMap:
          name: dagster-instance
      imagePullSecrets:
        {{- toYaml .Values.image.imagePullSecrets | nindent 8 }} 
