apiVersion: apps/v1
kind: Deployment
metadata:
  name: dagster-webserver
  labels:
    app: dagster-webserver
    component: webserver
spec:
  replicas: {{ .Values.webserver.replicas | default 1 }}
  selector:
    matchLabels:
      app: dagster-webserver
  template:
    metadata:
      labels:
        app: dagster-webserver
        component: webserver
    spec:
      containers:
      - name: dagster-webserver
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        command: ["dagster-webserver", "-h", "0.0.0.0", "-p", "3000", "-f", "/opt/dagster/examples/xiaoleng/definitions.py"]
        ports:
        - containerPort: 3000
        env:
        - name: DAGSTER_HOME
          value: /opt/dagster/dagster_home
        - name: PYTHONPATH
          value: /opt/dagster
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.postgresqlUsername | default "dagster" }}
        - name: SERVICE_TYPE
          value: "webserver"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dagster-postgresql
              key: postgresql-password
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.postgresqlDatabase | default "dagster" }}
        volumeMounts:
        - name: dagster-home
          mountPath: /opt/dagster/dagster_home
      initContainers:
      - name: copy-dagster-yaml
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: ["/bin/sh", "-c"]
        args:
          - cp /opt/dagster/conf/dagster.yaml /mnt/dagster_home/dagster.yaml
        volumeMounts:
          - name: dagster-home
            mountPath: /mnt/dagster_home
      volumes:
      - name: dagster-home
        persistentVolumeClaim:
          claimName: dagster-home-pvc
